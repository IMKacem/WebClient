{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\src\\\\Components\\\\Graphic\\\\Widget\\\\Sidebar.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DivideIcon from \"@material-ui/icons/Remove\";\nimport BoolIcon from \"@material-ui/icons/Done\";\nimport FloatIcon from \"@material-ui/icons/ExposureZeroSharp\";\nvar drawerWidth = 200;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerContainer: {\n      overflow: \"auto\"\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  };\n});\nexport default function ClippedDrawer() {\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"LibraryFunction\",\n    draggable: true,\n    onDragStart: function onDragStart(event) {\n      event.dataTransfer.setData(\"storm-diagram-node\", JSON.stringify({\n        type: \"in\"\n      }));\n    },\n    className: \"tray-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"LibraryFunction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"LibraryTask\",\n    draggable: true,\n    onDragStart: function onDragStart(event) {\n      event.dataTransfer.setData(\"storm-diagram-node\", JSON.stringify({\n        type: \"in\"\n      }));\n    },\n    className: \"tray-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"LibraryTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/ikacem/Documents/Altran/Optimind/WebClientOptimind/OLCP_project/OLCP_project/src/Components/Graphic/Widget/Sidebar.jsx"],"names":["React","makeStyles","Drawer","Toolbar","List","Divider","ListItem","ListItemIcon","ListItemText","AddIcon","ClearIcon","DivideIcon","BoolIcon","FloatIcon","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","ClippedDrawer","classes","paper","event","dataTransfer","setData","JSON","stringify","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DivideIcon from \"@material-ui/icons/Remove\";\r\nimport BoolIcon from \"@material-ui/icons/Done\";\r\nimport FloatIcon from \"@material-ui/icons/ExposureZeroSharp\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\nexport default function ClippedDrawer() {\r\n  const classes = useStyles();\r\n\r\nreturn (\r\n <div className={classes.root}>\r\n  <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n\r\n      <Toolbar />\r\n\r\n      <div className={classes.drawerContainer}>\r\n\r\n         <List>\r\n\r\n         <ListItem\r\n           button\r\n           key=\"LibraryFunction\"\r\n           draggable={true}\r\n           onDragStart={event => {\r\n             event.dataTransfer.setData(\r\n               \"storm-diagram-node\",\r\n               JSON.stringify({ type: \"in\" })\r\n             );\r\n           }}\r\n           className=\"tray-item\"\r\n         >\r\n           <ListItemIcon>\r\n             <AddIcon />\r\n           </ListItemIcon>\r\n           <ListItemText primary=\"LibraryFunction\" />\r\n         </ListItem>\r\n         <ListItem\r\n           button\r\n           key=\"LibraryTask\"\r\n           draggable={true}\r\n           onDragStart={event => {\r\n             event.dataTransfer.setData(\r\n               \"storm-diagram-node\",\r\n               JSON.stringify({ type: \"in\" })\r\n             );\r\n           }}\r\n           className=\"tray-item\"\r\n         >\r\n           <ListItemIcon>\r\n             <AddIcon />\r\n           </ListItemIcon>\r\n           <ListItemText primary=\"LibraryTask\" />\r\n         </ListItem>\r\n\r\n         </List>\r\n\r\n      </div>\r\n   </Drawer>\r\n  </div>\r\n );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}