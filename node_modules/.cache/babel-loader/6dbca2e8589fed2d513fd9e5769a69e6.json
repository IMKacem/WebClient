{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\src\\\\Components\\\\Graphic\\\\Widget\\\\BodyW.jsx\";\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel, DiagramWidget } from \"storm-react-diagrams\";\nimport Sidebar from \"./Sidebar\";\nimport Form from \"./Form\";\nexport var BodyWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(BodyWidget, _React$Component);\n\n  var _super = _createSuper(BodyWidget);\n\n  function BodyWidget(props) {\n    var _this;\n\n    _classCallCheck(this, BodyWidget);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(BodyWidget, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Drag and Drop Demo\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"diagram-layer\",\n        onDrop: function onDrop(event) {\n          var data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n\n          var nodesCount = _.keys(_this2.props.app.getDiagramEngine().getDiagramModel().getNodes()).length;\n\n          var node = null;\n\n          if (data.type === \"in\") {\n            node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(192,255,0)\");\n            node.addInPort(\"In\");\n            node.addOutPort(\"Out\");\n          } else {\n            node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n            node.addInPort(\"In\");\n            node.addOutPort(\"Out\");\n          }\n\n          var points = _this2.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\n          node.x = points.x;\n          node.y = points.y;\n\n          _this2.props.app.getDiagramEngine().getDiagramModel().addNode(node);\n\n          _this2.forceUpdate();\n        },\n        onDragOver: function onDragOver(event) {\n          event.preventDefault();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DiagramWidget, {\n        className: \"srd-demo-canvas\",\n        diagramEngine: this.props.app.getDiagramEngine(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return BodyWidget;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/ikacem/Documents/Altran/Optimind/WebClientOptimind/OLCP_project/OLCP_project/src/Components/Graphic/Widget/BodyW.jsx"],"names":["React","_","DefaultNodeModel","DiagramWidget","Sidebar","Form","BodyWidget","props","state","event","data","JSON","parse","dataTransfer","getData","nodesCount","keys","app","getDiagramEngine","getDiagramModel","getNodes","length","node","type","addInPort","addOutPort","points","getRelativeMousePoint","x","y","addNode","forceUpdate","preventDefault","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,sBAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,WAAaC,UAAb;AAAA;;AAAA;;AACE,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,6BAMW;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,cAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CACXH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,oBAA3B,CADW,CAAb;;AAGA,cAAMC,UAAU,GAAGd,CAAC,CAACe,IAAF,CACjB,MAAI,CAACT,KAAL,CAAWU,GAAX,CACGC,gBADH,GAEGC,eAFH,GAGGC,QAHH,EADiB,EAKjBC,MALF;;AAOA,cAAIC,IAAI,GAAG,IAAX;;AACA,cAAIZ,IAAI,CAACa,IAAL,KAAc,IAAlB,EAAwB;AACtBD,YAAAA,IAAI,GAAG,IAAIpB,gBAAJ,CACL,WAAWa,UAAU,GAAG,CAAxB,CADK,EAEL,gBAFK,CAAP;AAIAO,YAAAA,IAAI,CAACE,SAAL,CAAe,IAAf;AACAF,YAAAA,IAAI,CAACG,UAAL,CAAgB,KAAhB;AACD,WAPD,MAOO;AACLH,YAAAA,IAAI,GAAG,IAAIpB,gBAAJ,CACL,WAAWa,UAAU,GAAG,CAAxB,CADK,EAEL,gBAFK,CAAP;AAIAO,YAAAA,IAAI,CAACE,SAAL,CAAe,IAAf;AACAF,YAAAA,IAAI,CAACG,UAAL,CAAgB,KAAhB;AACD;;AACD,cAAIC,MAAM,GAAG,MAAI,CAACnB,KAAL,CAAWU,GAAX,CACVC,gBADU,GAEVS,qBAFU,CAEYlB,KAFZ,CAAb;;AAGAa,UAAAA,IAAI,CAACM,CAAL,GAASF,MAAM,CAACE,CAAhB;AACAN,UAAAA,IAAI,CAACO,CAAL,GAASH,MAAM,CAACG,CAAhB;;AACA,UAAA,MAAI,CAACtB,KAAL,CAAWU,GAAX,CACGC,gBADH,GAEGC,eAFH,GAGGW,OAHH,CAGWR,IAHX;;AAIA,UAAA,MAAI,CAACS,WAAL;AACD,SAvCH;AAwCE,QAAA,UAAU,EAAE,oBAAAtB,KAAK,EAAI;AACnBA,UAAAA,KAAK,CAACuB,cAAN;AACD,SA1CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA4CE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,aAAa,EAAE,KAAKzB,KAAL,CAAWU,GAAX,CAAeC,gBAAf,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CF,CAFF,CAJF,CADF;AA2DD;AAlEH;;AAAA;AAAA,EAAgClB,KAAK,CAACiC,SAAtC","sourcesContent":["import * as React from \"react\";\r\nimport * as _ from \"lodash\";\r\nimport { DefaultNodeModel, DiagramWidget } from \"storm-react-diagrams\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Form from \"./Form\";\r\n\r\nexport class BodyWidget extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">Drag and Drop Demo</div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Sidebar />\r\n          <div\r\n            className=\"diagram-layer\"\r\n            onDrop={event => {\r\n              const data = JSON.parse(\r\n                event.dataTransfer.getData(\"storm-diagram-node\")\r\n              );\r\n              const nodesCount = _.keys(\r\n                this.props.app\r\n                  .getDiagramEngine()\r\n                  .getDiagramModel()\r\n                  .getNodes()\r\n              ).length;\r\n\r\n              let node = null;\r\n              if (data.type === \"in\") {\r\n                node = new DefaultNodeModel(\r\n                  \"Node \" + (nodesCount + 1),\r\n                  \"rgb(192,255,0)\"\r\n                );\r\n                node.addInPort(\"In\");\r\n                node.addOutPort(\"Out\");\r\n              } else {\r\n                node = new DefaultNodeModel(\r\n                  \"Node \" + (nodesCount + 1),\r\n                  \"rgb(0,192,255)\"\r\n                );\r\n                node.addInPort(\"In\");\r\n                node.addOutPort(\"Out\");\r\n              }\r\n              var points = this.props.app\r\n                .getDiagramEngine()\r\n                .getRelativeMousePoint(event);\r\n              node.x = points.x;\r\n              node.y = points.y;\r\n              this.props.app\r\n                .getDiagramEngine()\r\n                .getDiagramModel()\r\n                .addNode(node);\r\n              this.forceUpdate();\r\n            }}\r\n            onDragOver={event => {\r\n              event.preventDefault();\r\n            }}\r\n          >\r\n            <DiagramWidget\r\n              className=\"srd-demo-canvas\"\r\n              diagramEngine={this.props.app.getDiagramEngine()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}