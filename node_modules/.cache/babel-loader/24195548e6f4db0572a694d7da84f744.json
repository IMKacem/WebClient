{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ikacem\\\\Documents\\\\Altran\\\\Optimind\\\\WebClientOptimind\\\\OLCP_project\\\\OLCP_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport * as SRD from \"storm-react-diagrams\";\nimport React, { Component } from 'react';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch('http://localhost:8080/test/rest/Workflow/Workflow').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          contacts: data\n        });\n      }).catch(console.log);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport var Application = /*#__PURE__*/function () {\n  function Application() {\n    _classCallCheck(this, Application);\n\n    this.diagramEngine = new SRD.DiagramEngine();\n    this.diagramEngine.installDefaultFactories();\n    this.activeModel = SRD.DiagramModel;\n  }\n\n  _createClass(Application, [{\n    key: \"getActiveDiagram\",\n    value: function getActiveDiagram() {\n      return this.activeModel;\n    }\n  }, {\n    key: \"getDiagramEngine\",\n    value: function getDiagramEngine() {\n      return this.diagramEngine;\n    }\n  }]);\n\n  return Application;\n}();","map":{"version":3,"sources":["C:/Users/ikacem/Documents/Altran/Optimind/WebClientOptimind/OLCP_project/OLCP_project/src/Components/Graphic/App.jsx"],"names":["SRD","React","Component","App","fetch","then","res","json","data","setState","contacts","catch","console","log","Application","diagramEngine","DiagramEngine","installDefaultFactories","activeModel","DiagramModel"],"mappings":";;;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,sBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;;;;;;;;;wCACgB;AAAA;;AACZC,MAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,IAAD,EAAU;AACd,QAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEF;AAAZ,SAAd;AACD,OAJD,EAKCG,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;;;EARSX,S;;AAWlB,WAAaY,WAAb;AACE,yBAAc;AAAA;;AACZ,SAAKC,aAAL,GAAqB,IAAIf,GAAG,CAACgB,aAAR,EAArB;AACA,SAAKD,aAAL,CAAmBE,uBAAnB;AAEA,SAAKC,WAAL,GAAmBlB,GAAG,CAACmB,YAAvB;AACD;;AANH;AAAA;AAAA,uCAQuC;AACnC,aAAO,KAAKD,WAAZ;AACD;AAVH;AAAA;AAAA,uCAYwC;AACpC,aAAO,KAAKH,aAAZ;AACD;AAdH;;AAAA;AAAA","sourcesContent":["import * as SRD from \"storm-react-diagrams\";\r\nimport React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n          fetch('http://localhost:8080/test/rest/Workflow/Workflow')\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            this.setState({ contacts: data })\r\n          })\r\n          .catch(console.log)\r\n        }\r\n}\r\n\r\nexport class Application {\r\n  constructor() {\r\n    this.diagramEngine = new SRD.DiagramEngine();\r\n    this.diagramEngine.installDefaultFactories();\r\n\r\n    this.activeModel = SRD.DiagramModel;\r\n  }\r\n\r\n  getActiveDiagram(): SRD.DiagramModel {\r\n    return this.activeModel;\r\n  }\r\n\r\n  getDiagramEngine(): SRD.DiagramEngine {\r\n    return this.diagramEngine;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}